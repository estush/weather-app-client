{"ast":null,"code":"// import React, { useState } from 'react';\n// import '../style/Weather.scss'; \n// import Logo from '../assets/logo-fintek.png';\n// import { getWeather } from '../axios/weather.service'; // תיקון בהתאם למיקום הקובץ\n\n// const Weather = () => {\n//   const [inputValue, setInputValue] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [weatherData, setWeatherData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleSubmit = async () => {\n//     if (!inputValue) {\n//       setErrorMessage('Please enter a city name.');\n//       setWeatherData(null);\n//       setError(null);\n//       setIsSubmitted(false);\n//     } else if (!/^[a-zA-Z\\s]+$/.test(inputValue)) {\n//       setErrorMessage('Invalid city name. Please enter only English letters.');\n//       setWeatherData(null);\n//       setError(null);\n//       setIsSubmitted(false);\n//     } else {\n//       setErrorMessage('');\n//       setIsSubmitted(false); \n//       setIsLoading(true); \n//       setWeatherData(null); \n//       setError(null);\n\n//       try {\n//         const data = await getWeather(inputValue);\n//         if (data) {\n//           setWeatherData(data);\n//           setIsSubmitted(true);\n//         } else {\n//           setError('No data available for this city.');\n//         }\n//       } catch (error) {\n//         if (error.response && error.response.status === 404) {\n//           setError('City not found. Please check the spelling and try again.');\n//         } else {\n//           setError('Failed to fetch weather data.');\n//         }\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const value = e.target.value;\n\n//     if (/[\\u0590-\\u05FF]/.test(value)) { // בודק אם יש תווים בעברית\n//       setErrorMessage('Hebrew letters are not allowed. Please enter only English letters.');\n//     } else {\n//       setErrorMessage('');\n//     }\n\n//     setInputValue(value);\n//   };\n\n//   return (\n//     <div className=\"weather-container\" role=\"main\" aria-labelledby=\"weather-title\">\n//       <div className=\"weather-content\">\n//         <div className=\"weather-logo\">\n//           <img src={Logo} alt=\"Website logo\" className=\"logo\" aria-hidden=\"true\" />\n//         </div>\n//         <div className=\"weather-box\">\n//           <div className={`weather-info ${isSubmitted || isLoading ? 'hide' : ''}`} aria-live=\"polite\">\n//             <p>Use our app <br/> to see the weather <br/> around the world</p>\n//             <h5 id=\"city-name\">City Name</h5>\n//             <div className=\"weather-input-container\">\n//               <input\n//                 type=\"text\"\n//                 aria-labelledby=\"city-name\"\n//                 aria-describedby=\"city-name-desc\"\n//                 placeholder=\"Enter a city name...\"\n//                 value={inputValue}\n//                 onChange={handleInputChange}\n//               />\n//               <button onClick={handleSubmit} aria-label=\"Check the weather for the entered city\">Check</button>\n//             </div>\n//             {errorMessage && <p role=\"alert\" className=\"error-message\">{errorMessage}</p>}\n//             {isLoading && <p role=\"status\" className=\"note\">Loading...</p>}\n//             {error && !isLoading && (\n//               <p role=\"alert\" className=\"note\">{error}</p>\n//             )}\n//           </div>\n\n//           {isSubmitted && weatherData && (\n//             <div className=\"weather-display\" aria-live=\"polite\">\n//               <div className=\"weather-display weather-turquoise\">\n//                 <h2 className=\"city\">{weatherData.city}</h2>\n//                 <h3 className=\"cun\">{weatherData.country}</h3>\n//                 <p id='tytle'>{weatherData.dateTime}</p>\n//                 <h1 className='temp'>{weatherData.temperature}°</h1>\n//                 <p className='cond'>{weatherData.condition}</p>\n//                 <div className=\"weather-details\">\n//                   <div className=\"weather-table\">\n//                     <div className=\"weather-table-header\">\n//                       <div id=\"tytle\" className=\"weather-table-cell\">Precipitation</div>\n//                       <div id=\"tytle\" className=\"weather-table-cell\">Humidity</div>\n//                       <div id=\"tytle\" className=\"weather-table-cell\">Wind</div>\n//                     </div>\n//                     <div className=\"weather-table-body\">\n//                       <div className=\"weather-table-cell\">{weatherData.precipitation} mm</div>\n//                       <div className=\"weather-table-cell\">{weatherData.humidity}%</div>\n//                       <div className=\"weather-table-cell\">{weatherData.wind} km/h</div>\n//                     </div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"temperature-table\">\n//                   <div className=\"temperature-table-header\">\n//                     {weatherData.temperatures.map(t => (\n//                       <div id='tytle' key={t.time} className=\"temperature-table-cell\">{t.time}</div>\n//                     ))}\n//                   </div>\n//                   <div className=\"temperature-table-body\">\n//                     {weatherData.temperatures.map(t => (\n//                       <div key={t.time} className=\"temperature-table-cell\">{t.temperature}°</div>\n//                     ))}\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Weather;","map":{"version":3,"names":[],"sources":["D:/PROJECTS/fintek/my-app/src/componnents/Weather.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../style/Weather.scss'; \r\n// import Logo from '../assets/logo-fintek.png';\r\n// import { getWeather } from '../axios/weather.service'; // תיקון בהתאם למיקום הקובץ\r\n\r\n// const Weather = () => {\r\n//   const [inputValue, setInputValue] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n//   const [weatherData, setWeatherData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   const handleSubmit = async () => {\r\n//     if (!inputValue) {\r\n//       setErrorMessage('Please enter a city name.');\r\n//       setWeatherData(null);\r\n//       setError(null);\r\n//       setIsSubmitted(false);\r\n//     } else if (!/^[a-zA-Z\\s]+$/.test(inputValue)) {\r\n//       setErrorMessage('Invalid city name. Please enter only English letters.');\r\n//       setWeatherData(null);\r\n//       setError(null);\r\n//       setIsSubmitted(false);\r\n//     } else {\r\n//       setErrorMessage('');\r\n//       setIsSubmitted(false); \r\n//       setIsLoading(true); \r\n//       setWeatherData(null); \r\n//       setError(null);\r\n\r\n//       try {\r\n//         const data = await getWeather(inputValue);\r\n//         if (data) {\r\n//           setWeatherData(data);\r\n//           setIsSubmitted(true);\r\n//         } else {\r\n//           setError('No data available for this city.');\r\n//         }\r\n//       } catch (error) {\r\n//         if (error.response && error.response.status === 404) {\r\n//           setError('City not found. Please check the spelling and try again.');\r\n//         } else {\r\n//           setError('Failed to fetch weather data.');\r\n//         }\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const value = e.target.value;\r\n\r\n//     if (/[\\u0590-\\u05FF]/.test(value)) { // בודק אם יש תווים בעברית\r\n//       setErrorMessage('Hebrew letters are not allowed. Please enter only English letters.');\r\n//     } else {\r\n//       setErrorMessage('');\r\n//     }\r\n\r\n//     setInputValue(value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"weather-container\" role=\"main\" aria-labelledby=\"weather-title\">\r\n//       <div className=\"weather-content\">\r\n//         <div className=\"weather-logo\">\r\n//           <img src={Logo} alt=\"Website logo\" className=\"logo\" aria-hidden=\"true\" />\r\n//         </div>\r\n//         <div className=\"weather-box\">\r\n//           <div className={`weather-info ${isSubmitted || isLoading ? 'hide' : ''}`} aria-live=\"polite\">\r\n//             <p>Use our app <br/> to see the weather <br/> around the world</p>\r\n//             <h5 id=\"city-name\">City Name</h5>\r\n//             <div className=\"weather-input-container\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 aria-labelledby=\"city-name\"\r\n//                 aria-describedby=\"city-name-desc\"\r\n//                 placeholder=\"Enter a city name...\"\r\n//                 value={inputValue}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//               <button onClick={handleSubmit} aria-label=\"Check the weather for the entered city\">Check</button>\r\n//             </div>\r\n//             {errorMessage && <p role=\"alert\" className=\"error-message\">{errorMessage}</p>}\r\n//             {isLoading && <p role=\"status\" className=\"note\">Loading...</p>}\r\n//             {error && !isLoading && (\r\n//               <p role=\"alert\" className=\"note\">{error}</p>\r\n//             )}\r\n//           </div>\r\n\r\n//           {isSubmitted && weatherData && (\r\n//             <div className=\"weather-display\" aria-live=\"polite\">\r\n//               <div className=\"weather-display weather-turquoise\">\r\n//                 <h2 className=\"city\">{weatherData.city}</h2>\r\n//                 <h3 className=\"cun\">{weatherData.country}</h3>\r\n//                 <p id='tytle'>{weatherData.dateTime}</p>\r\n//                 <h1 className='temp'>{weatherData.temperature}°</h1>\r\n//                 <p className='cond'>{weatherData.condition}</p>\r\n//                 <div className=\"weather-details\">\r\n//                   <div className=\"weather-table\">\r\n//                     <div className=\"weather-table-header\">\r\n//                       <div id=\"tytle\" className=\"weather-table-cell\">Precipitation</div>\r\n//                       <div id=\"tytle\" className=\"weather-table-cell\">Humidity</div>\r\n//                       <div id=\"tytle\" className=\"weather-table-cell\">Wind</div>\r\n//                     </div>\r\n//                     <div className=\"weather-table-body\">\r\n//                       <div className=\"weather-table-cell\">{weatherData.precipitation} mm</div>\r\n//                       <div className=\"weather-table-cell\">{weatherData.humidity}%</div>\r\n//                       <div className=\"weather-table-cell\">{weatherData.wind} km/h</div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"temperature-table\">\r\n//                   <div className=\"temperature-table-header\">\r\n//                     {weatherData.temperatures.map(t => (\r\n//                       <div id='tytle' key={t.time} className=\"temperature-table-cell\">{t.time}</div>\r\n//                     ))}\r\n//                   </div>\r\n//                   <div className=\"temperature-table-body\">\r\n//                     {weatherData.temperatures.map(t => (\r\n//                       <div key={t.time} className=\"temperature-table-cell\">{t.temperature}°</div>\r\n//                     ))}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Weather;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}